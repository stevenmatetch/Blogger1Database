// <auto-generated />
using System;
using Blogger1Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blogger1Database.Migrations
{
    [DbContext(typeof(Blogger1DatabaseContext))]
    [Migration("20201114142649_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blogger1Database.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<int>("UserID");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Blogger1Database.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<string>("Picture");

                    b.Property<long>("Published");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Blogger1Database.Models.BookOrder", b =>
                {
                    b.Property<int>("BookID");

                    b.Property<int>("OrderID");

                    b.HasKey("BookID", "OrderID");

                    b.HasIndex("OrderID");

                    b.ToTable("BookOrder");
                });

            modelBuilder.Entity("Blogger1Database.Models.Extra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Picture");

                    b.Property<double>("Price");

                    b.HasKey("ID");

                    b.ToTable("Extra");
                });

            modelBuilder.Entity("Blogger1Database.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookID");

                    b.Property<DateTime>("Date");

                    b.Property<int>("ExtraID");

                    b.Property<int>("TotalPrice");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Blogger1Database.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Blogger1Database.Models.Account", b =>
                {
                    b.HasOne("Blogger1Database.Models.User")
                        .WithOne("Account")
                        .HasForeignKey("Blogger1Database.Models.Account", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Blogger1Database.Models.BookOrder", b =>
                {
                    b.HasOne("Blogger1Database.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Blogger1Database.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
